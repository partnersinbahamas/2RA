import React from 'react';
import PropTypes from 'prop-types';

import { LargeSvg, MediumSvg, SmallSvg } from './Svg';
import { TIcon } from '.';

const ServiceIcon: React.FC<TIcon> = ({ className, color, style, size, withBox }) => {
  switch (size) {
    case 'SMALL':
      return (
        <SmallSvg
          xmlns="http://www.w3.org/2000/svg"
          viewBox={withBox ? '-2.5 -1.5 20 22' : '0 0 16 18.3'}
          style={style}
          fill={color}
          className={className}
        >
          <path
            d="M14 6C14 8.20914 12.2091 10 10 10C7.79087 10 6.00001 8.20914 6.00001 6C6.00001 3.79086 7.79087 2 10 2C11.1165 2 12.1262 2.45747 12.8519 3.1952L9.82201 6.19689L8.40401 4.82389L7.00001 6.22789L9.84301 9.01389L13.8705 4.98643C13.955 5.31013 14 5.64981 14 6ZM16 6C16 9.31371 13.3137 12 10 12C6.6863 12 4.00001 9.31371 4.00001 6C4.00001 2.68629 6.6863 0 10 0C13.3137 0 16 2.68629 16 6ZM4.50972e-05 16.375V3.625C4.50972e-05 2.719 0.719045 2 1.62505 2H3.00005C3.56305 2 4.00004 2.438 4.00004 3C4.00004 3.563 3.56205 4 3.00005 4H2.00005V16H10V14C10 13.437 10.469 13 11 13C11.563 13 12 13.438 12 14V16.375C12 17.281 11.281 18 10.375 18H1.62505C1.41124 18.0015 1.19927 17.9604 1.00146 17.8793C0.803645 17.7981 0.623924 17.6785 0.472737 17.5273C0.32155 17.3761 0.201909 17.1964 0.120763 16.9986C0.0396166 16.8008 -0.0014171 16.5888 4.50972e-05 16.375ZM4.00004 13C4.00004 12.437 4.43805 12 5.00004 12H7.00004C7.56305 12 8.00005 12.438 8.00005 13C8.00005 13.563 7.56205 14 7.00004 14H5.00004C4.43705 14 4.00004 13.562 4.00004 13Z"
            fillRule="evenodd"
            clipRule="evenodd"
          />
        </SmallSvg>
      );

    case 'MEDIUM':
      return (
        <MediumSvg
          xmlns="http://www.w3.org/2000/svg"
          viewBox={withBox ? '0 -0.5 24 24' : '3 0 19 22'}
          style={style}
          fill={color}
          className={className}
        >
          <path
            d="M20 6C20 8.20914 18.2091 10 16 10C13.7909 10 12 8.20914 12 6C12 3.79086 13.7909 2 16 2C17.1165 2 18.1262 2.45747 18.8519 3.19521L15.822 6.19689L14.404 4.82389L13 6.22789L15.843 9.01389L19.8705 4.98643C19.955 5.31013 20 5.64981 20 6ZM22 6C22 9.31371 19.3137 12 16 12C12.6863 12 10 9.31371 10 6C10 2.68629 12.6863 0 16 0C19.3137 0 22 2.68629 22 6ZM3.5 19.5V4C3.5 2.906 4.406 2 5.5 2H8.469C9.031 2 9.469 2.438 9.469 3C9.469 3.531 9.031 4 8.469 4H5.5V19.5C5.5 19.781 5.688 20 5.969 20H14.969C15.25 20 15.5 19.781 15.5 19.5V14.656C15.5 14.125 15.938 13.656 16.469 13.656C17.062 13.656 17.5 14.125 17.5 14.656V19.5C17.5 20.875 16.375 22 14.969 22H5.969C4.625 22 3.5 20.875 3.5 19.5ZM7.5 17C7.5 16.437 7.938 16 8.469 16H12.5C12.6295 16.0014 12.7574 16.0285 12.8763 16.0796C12.9953 16.1308 13.1029 16.205 13.193 16.298C13.2831 16.391 13.3539 16.5009 13.4012 16.6214C13.4486 16.7419 13.4717 16.8706 13.469 17C13.469 17.531 13.031 18 12.5 18H8.469C7.938 18 7.5 17.531 7.5 17ZM7.5 13C7.5 12.437 7.938 12 8.5 12H10.5C10.6295 12.0014 10.7574 12.0285 10.8763 12.0796C10.9953 12.1308 11.1029 12.205 11.193 12.298C11.2831 12.391 11.3539 12.5009 11.4012 12.6214C11.4486 12.7419 11.4717 12.8706 11.469 13C11.4717 13.1294 11.4486 13.2581 11.4012 13.3786C11.3539 13.4991 11.2831 13.609 11.193 13.702C11.1029 13.795 10.9953 13.8692 10.8763 13.9204C10.7574 13.9715 10.6295 13.9986 10.5 14H8.5C7.937 14 7.5 13.562 7.5 13Z"
            fillRule="evenodd"
            clipRule="evenodd"
          />
        </MediumSvg>
      );

    case 'LARGE':
    default:
      return (
        <LargeSvg
          xmlns="http://www.w3.org/2000/svg"
          viewBox={withBox ? '1 -0.5 32 32' : '4 0 27 30'}
          style={style}
          fill={color}
          className={className}
        >
          <path
            d="M31 8C31 3.594 27.406 0 23 0C18.594 0 15 3.594 15 8C15 12.406 18.594 16 23 16C27.406 16 31 12.406 31 8ZM18.7574 3.75736C19.8826 2.63214 21.4087 2 23 2C26.312 2 29 4.687 29 8C29 11.313 26.312 14 23 14C21.4087 14 19.8826 13.3679 18.7574 12.2426C17.6321 11.1174 17 9.5913 17 8C17 6.4087 17.6321 4.88258 18.7574 3.75736ZM27.187 6.501L25.783 5.097L21.85 9L20.432 7.627L19.028 9.031L21.871 11.817L27.187 6.501ZM4 5.375V26.625C4 28.5 5.344 30 7 30H21C22.656 30 24 28.5 24 26.625V19C24 18.438 23.563 18 23 18C22.438 18 22 18.437 22 19V26.625C22 27.375 21.531 28 21 28H7C6.469 28 6 27.375 6 26.625V5.375C6 4.625 6.469 4 7 4H13C13.562 4 14 3.563 14 3C14 2.438 13.563 2 13 2H7C5.344 2 4 3.5 4 5.375ZM9 22C8.438 22 8 22.437 8 23C8 23.562 8.437 24 9 24H19C19.562 24 20 23.563 20 23C20 22.438 19.563 22 19 22H9ZM9 18C8.438 18 8 18.437 8 19C8 19.562 8.437 20 9 20H19C19.562 20 20 19.563 20 19C20 18.438 19.563 18 19 18H9ZM9 14C8.438 14 8 14.437 8 15C8 15.562 8.437 16 9 16H11C11.562 16 12 15.563 12 15C12 14.438 11.563 14 11 14H9ZM9 10C8.438 10 8 10.437 8 11C8 11.562 8.437 12 9 12H11C11.562 12 12 11.563 12 11C12 10.438 11.563 10 11 10H9ZM9 6C8.438 6 8 6.437 8 7C8 7.562 8.437 8 9 8H11C11.562 8 12 7.563 12 7C12 6.438 11.563 6 11 6H9Z"
            fillRule="evenodd"
            clipRule="evenodd"
          />
        </LargeSvg>
      );
  }
};

ServiceIcon.propTypes = {
  className: PropTypes.string,
  color: PropTypes.string,
  style: PropTypes.any,
  withBox: PropTypes.bool,
};

ServiceIcon.defaultProps = {
  className: '',
  color: 'currentcolor',
  style: {},
  size: 'LARGE',
  withBox: false,
};

export default ServiceIcon;
