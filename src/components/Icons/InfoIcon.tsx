import React from 'react';
import PropTypes from 'prop-types';

import { LargeSvg, MediumSvg, SmallSvg } from './Svg';
import { TIcon } from '.';

const InfoIcon: React.FC<TIcon> = ({
  className,
  color,
  size,
  style,
  withBox,
}) => {
  switch (size) {
    case 'SOLID':
      return (
        <SmallSvg
          id="Info_Icon"
          xmlns="http://www.w3.org/2000/svg"
          viewBox={withBox ? '0 0 20 20' : '2 2 16 16'}
          style={style}
          fill={color}
          className={className}
        >
          <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M8 0C12.406 0 16 3.594 16 8C16 12.406 12.406 16 8 16C3.594 16 0 12.406 0 8C0 3.594 3.594 0 8 0ZM9 6H5.437V8H7V10H5V12H11V10H9V6ZM8 2.469C7.312 2.469 6.719 3.031 6.719 3.719C6.719 4.437 7.313 5 8 5C8.688 5 9.281 4.437 9.281 3.719C9.281 3.031 8.687 2.469 8 2.469Z"
          />
        </SmallSvg>
      );
    case 'SMALL':
      return (
        <SmallSvg
          id="Info_Icon"
          xmlns="http://www.w3.org/2000/svg"
          style={style}
          fill={color}
          viewBox={withBox ? '0 0 20 20' : '2 2 16 16'}
          className={className}
        >
          <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M10 2C14.406 2 18 5.594 18 10C18 14.406 14.406 18 10 18C5.594 18 2 14.406 2 10C2 5.594 5.594 2 10 2ZM10 4C6.687 4 4 6.688 4 10C4 13.313 6.688 16 10 16C13.313 16 16 13.312 16 10C16 6.687 13.312 4 10 4ZM11 8V12H13V14H7V12H9V10H7.344V8H11ZM10 5.062C10.594 5.062 11.031 5.5 11.031 6.094C11.031 6.687 10.594 7.125 10 7.125C9.86352 7.12901 9.72766 7.10509 9.60076 7.05469C9.47386 7.0043 9.3586 6.9285 9.26205 6.83195C9.1655 6.7354 9.0897 6.62014 9.03931 6.49324C8.98891 6.36634 8.96499 6.23048 8.969 6.094C8.969 5.5 9.406 5.062 10 5.062Z"
          />
        </SmallSvg>
      );

    case 'MEDIUM':
      return (
        <MediumSvg
          id="Info_Icon"
          xmlns="http://www.w3.org/2000/svg"
          style={style}
          fill={color}
          viewBox={withBox ? '0 0 24 24' : '2 2 20 20'}
          className={className}
        >
          <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M12 2.00001C13.3136 1.99869 14.6145 2.25645 15.8284 2.75853C17.0422 3.26061 18.1452 3.99716 19.074 4.926C20.0029 5.85485 20.7394 6.95777 21.2415 8.17162C21.7436 9.38546 22.0013 10.6864 22 12C22.0013 13.3136 21.7436 14.6145 21.2415 15.8284C20.7394 17.0422 20.0029 18.1452 19.074 19.074C18.1452 20.0029 17.0422 20.7394 15.8284 21.2415C14.6145 21.7436 13.3136 22.0013 12 22C10.6864 22.0013 9.38546 21.7436 8.17162 21.2415C6.95777 20.7394 5.85485 20.0029 4.926 19.074C3.99716 18.1452 3.26061 17.0422 2.75853 15.8284C2.25645 14.6145 1.99869 13.3136 2.00001 12C1.99869 10.6864 2.25645 9.38546 2.75853 8.17162C3.26061 6.95777 3.99716 5.85485 4.926 4.926C5.85485 3.99716 6.95777 3.26061 8.17162 2.75853C9.38546 2.25645 10.6864 1.99869 12 2.00001ZM12 4.00001C7.562 4.00001 4.00001 7.563 4.00001 12C4.00001 16.406 7.594 20 12 20C16.406 20 20 16.406 20 12C20 7.562 16.406 4.00001 12 4.00001ZM12 10C12.594 10 13 10.438 13 11V15H14.031C14.562 15 15 15.469 15 16C15 16.531 14.562 17 14.031 17H10C9.469 17 9.00001 16.531 9.00001 16C9.00001 15.437 9.469 15 10 15H11V12H10.062C9.50001 12 9.06201 11.531 9.06201 11C9.06201 10.469 9.50001 10 10.062 10H12ZM12 6.00001C12.688 6.00001 13.25 6.531 13.25 7.21901C13.25 7.93701 12.687 8.46901 12 8.46901C11.312 8.46901 10.75 7.938 10.75 7.21901C10.75 6.53 11.313 6.00001 12 6.00001Z"
          />
        </MediumSvg>
      );

    case 'LARGE':
    default:
      return (
        <LargeSvg
          id="Info_Icon"
          xmlns="http://www.w3.org/2000/svg"
          style={style}
          fill={color}
          viewBox={withBox ? '0 0 32 32' : '2 2 28 28'}
          className={className}
        >
          <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M16 2C23.719 2 30 8.281 30 16C30 23.719 23.719 30 16 30C8.281 30 2 23.719 2 16C2 8.281 8.281 2 16 2ZM16 4C9.375 4 4 9.375 4 16C4 22.625 9.375 28 16 28C22.625 28 28 22.625 28 16C28 9.375 22.625 4 16 4ZM15.4 13.12C15.608 13.07 15.814 13.006 15.997 13.008C16.556 13.015 17 13.434 17 14V21H19C19.563 21 20 21.438 20 22C20 22.563 19.562 23 19 23H13C12.437 23 12 22.562 12 22C12 21.437 12.438 21 13 21H15V15.25H13.25C12.687 15.25 12.25 14.812 12.25 14.25C12.25 13.687 12.688 13.25 13.25 13.25H14.875L15.401 13.12H15.4ZM15.844 8.094C16.2418 8.094 16.6234 8.25204 16.9047 8.53334C17.186 8.81464 17.344 9.19618 17.344 9.594C17.344 10.438 16.687 11.094 15.844 11.094C15.4462 11.094 15.0646 10.936 14.7833 10.6547C14.502 10.3734 14.344 9.99182 14.344 9.594C14.344 8.781 15.031 8.094 15.844 8.094Z"
          />
        </LargeSvg>
      );
  }
};

InfoIcon.propTypes = {
  className: PropTypes.string,
  color: PropTypes.string,
  style: PropTypes.any,
  withBox: PropTypes.bool,
};

InfoIcon.defaultProps = {
  className: '',
  color: 'currentcolor',
  size: 'LARGE',
  style: {},
  withBox: false,
};

export default InfoIcon;
